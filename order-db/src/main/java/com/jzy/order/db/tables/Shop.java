/*
 * This file is generated by jOOQ.
 */
package com.jzy.order.db.tables;


import com.jzy.order.db.Indexes;
import com.jzy.order.db.Keys;
import com.jzy.order.db.Order;
import com.jzy.order.db.tables.records.ShopRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row15;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Shop extends TableImpl<ShopRecord> {

    private static final long serialVersionUID = -1616713422;

    /**
     * The reference instance of <code>order.shop</code>
     */
    public static final Shop SHOP = new Shop();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ShopRecord> getRecordType() {
        return ShopRecord.class;
    }

    /**
     * The column <code>order.shop.id</code>.
     */
    public final TableField<ShopRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>order.shop.name</code>.
     */
    public final TableField<ShopRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>order.shop.brief_desc</code>.
     */
    public final TableField<ShopRecord, String> BRIEF_DESC = createField(DSL.name("brief_desc"), org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>order.shop.all_score</code>.
     */
    public final TableField<ShopRecord, Integer> ALL_SCORE = createField(DSL.name("all_score"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>order.shop.product_score</code>.
     */
    public final TableField<ShopRecord, Integer> PRODUCT_SCORE = createField(DSL.name("product_score"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>order.shop.service_score</code>.
     */
    public final TableField<ShopRecord, Integer> SERVICE_SCORE = createField(DSL.name("service_score"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>order.shop.sell_count_one_month</code>.
     */
    public final TableField<ShopRecord, Integer> SELL_COUNT_ONE_MONTH = createField(DSL.name("sell_count_one_month"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>order.shop.rate_count_one_month</code>.
     */
    public final TableField<ShopRecord, Integer> RATE_COUNT_ONE_MONTH = createField(DSL.name("rate_count_one_month"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>order.shop.avatar</code>.
     */
    public final TableField<ShopRecord, String> AVATAR = createField(DSL.name("avatar"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>order.shop.pictures</code>.
     */
    public final TableField<ShopRecord, String> PICTURES = createField(DSL.name("pictures"), org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>order.shop.tags</code>.
     */
    public final TableField<ShopRecord, String> TAGS = createField(DSL.name("tags"), org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>order.shop.bulletin</code>.
     */
    public final TableField<ShopRecord, String> BULLETIN = createField(DSL.name("bulletin"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>order.shop.infos</code>.
     */
    public final TableField<ShopRecord, String> INFOS = createField(DSL.name("infos"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>order.shop.ctime</code>.
     */
    public final TableField<ShopRecord, Timestamp> CTIME = createField(DSL.name("ctime"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>order.shop.mtime</code>.
     */
    public final TableField<ShopRecord, Timestamp> MTIME = createField(DSL.name("mtime"), org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>order.shop</code> table reference
     */
    public Shop() {
        this(DSL.name("shop"), null);
    }

    /**
     * Create an aliased <code>order.shop</code> table reference
     */
    public Shop(String alias) {
        this(DSL.name(alias), SHOP);
    }

    /**
     * Create an aliased <code>order.shop</code> table reference
     */
    public Shop(Name alias) {
        this(alias, SHOP);
    }

    private Shop(Name alias, Table<ShopRecord> aliased) {
        this(alias, aliased, null);
    }

    private Shop(Name alias, Table<ShopRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Shop(Table<O> child, ForeignKey<O, ShopRecord> key) {
        super(child, key, SHOP);
    }

    @Override
    public Schema getSchema() {
        return Order.ORDER;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SHOP_PRIMARY);
    }

    @Override
    public Identity<ShopRecord, Long> getIdentity() {
        return Keys.IDENTITY_SHOP;
    }

    @Override
    public UniqueKey<ShopRecord> getPrimaryKey() {
        return Keys.KEY_SHOP_PRIMARY;
    }

    @Override
    public List<UniqueKey<ShopRecord>> getKeys() {
        return Arrays.<UniqueKey<ShopRecord>>asList(Keys.KEY_SHOP_PRIMARY);
    }

    @Override
    public Shop as(String alias) {
        return new Shop(DSL.name(alias), this);
    }

    @Override
    public Shop as(Name alias) {
        return new Shop(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Shop rename(String name) {
        return new Shop(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Shop rename(Name name) {
        return new Shop(name, null);
    }

    // -------------------------------------------------------------------------
    // Row15 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row15<Long, String, String, Integer, Integer, Integer, Integer, Integer, String, String, String, String, String, Timestamp, Timestamp> fieldsRow() {
        return (Row15) super.fieldsRow();
    }
}
