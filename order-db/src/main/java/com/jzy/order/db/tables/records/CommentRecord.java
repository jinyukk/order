/*
 * This file is generated by jOOQ.
 */
package com.jzy.order.db.tables.records;


import com.jzy.order.db.tables.Comment;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record8<Long, String, Long, String, Integer, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = -490096793;

    /**
     * Setter for <code>order.comment.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>order.comment.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>order.comment.order_id</code>.
     */
    public void setOrderId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>order.comment.order_id</code>.
     */
    public String getOrderId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>order.comment.shop_id</code>.
     */
    public void setShopId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>order.comment.shop_id</code>.
     */
    public Long getShopId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>order.comment.uid</code>.
     */
    public void setUid(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>order.comment.uid</code>.
     */
    public String getUid() {
        return (String) get(3);
    }

    /**
     * Setter for <code>order.comment.all_score</code>.
     */
    public void setAllScore(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>order.comment.all_score</code>.
     */
    public Integer getAllScore() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>order.comment.brief_comment</code>.
     */
    public void setBriefComment(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>order.comment.brief_comment</code>.
     */
    public String getBriefComment() {
        return (String) get(5);
    }

    /**
     * Setter for <code>order.comment.ctime</code>.
     */
    public void setCtime(Timestamp value) {
        set(6, value);
    }

    /**
     * Getter for <code>order.comment.ctime</code>.
     */
    public Timestamp getCtime() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>order.comment.mtime</code>.
     */
    public void setMtime(Timestamp value) {
        set(7, value);
    }

    /**
     * Getter for <code>order.comment.mtime</code>.
     */
    public Timestamp getMtime() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, Long, String, Integer, String, Timestamp, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, Long, String, Integer, String, Timestamp, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Comment.COMMENT.ID;
    }

    @Override
    public Field<String> field2() {
        return Comment.COMMENT.ORDER_ID;
    }

    @Override
    public Field<Long> field3() {
        return Comment.COMMENT.SHOP_ID;
    }

    @Override
    public Field<String> field4() {
        return Comment.COMMENT.UID;
    }

    @Override
    public Field<Integer> field5() {
        return Comment.COMMENT.ALL_SCORE;
    }

    @Override
    public Field<String> field6() {
        return Comment.COMMENT.BRIEF_COMMENT;
    }

    @Override
    public Field<Timestamp> field7() {
        return Comment.COMMENT.CTIME;
    }

    @Override
    public Field<Timestamp> field8() {
        return Comment.COMMENT.MTIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getOrderId();
    }

    @Override
    public Long component3() {
        return getShopId();
    }

    @Override
    public String component4() {
        return getUid();
    }

    @Override
    public Integer component5() {
        return getAllScore();
    }

    @Override
    public String component6() {
        return getBriefComment();
    }

    @Override
    public Timestamp component7() {
        return getCtime();
    }

    @Override
    public Timestamp component8() {
        return getMtime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getOrderId();
    }

    @Override
    public Long value3() {
        return getShopId();
    }

    @Override
    public String value4() {
        return getUid();
    }

    @Override
    public Integer value5() {
        return getAllScore();
    }

    @Override
    public String value6() {
        return getBriefComment();
    }

    @Override
    public Timestamp value7() {
        return getCtime();
    }

    @Override
    public Timestamp value8() {
        return getMtime();
    }

    @Override
    public CommentRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CommentRecord value2(String value) {
        setOrderId(value);
        return this;
    }

    @Override
    public CommentRecord value3(Long value) {
        setShopId(value);
        return this;
    }

    @Override
    public CommentRecord value4(String value) {
        setUid(value);
        return this;
    }

    @Override
    public CommentRecord value5(Integer value) {
        setAllScore(value);
        return this;
    }

    @Override
    public CommentRecord value6(String value) {
        setBriefComment(value);
        return this;
    }

    @Override
    public CommentRecord value7(Timestamp value) {
        setCtime(value);
        return this;
    }

    @Override
    public CommentRecord value8(Timestamp value) {
        setMtime(value);
        return this;
    }

    @Override
    public CommentRecord values(Long value1, String value2, Long value3, String value4, Integer value5, String value6, Timestamp value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Long id, String orderId, Long shopId, String uid, Integer allScore, String briefComment, Timestamp ctime, Timestamp mtime) {
        super(Comment.COMMENT);

        set(0, id);
        set(1, orderId);
        set(2, shopId);
        set(3, uid);
        set(4, allScore);
        set(5, briefComment);
        set(6, ctime);
        set(7, mtime);
    }
}
